#include<iostream>
#include<algorithm>
#include<queue>
using namespace std;
//1147
int n,m,num,tree[1002],nonleaf;
bool maxheap(){
	for(int i=1;i<=m-nonleaf;i++){
		if(tree[i]<tree[2*i]||(2*i+1<=m&&tree[i]<tree[2*i+1]))
			return false;
	}
	return true;
}
bool minheap(){
	for(int i=1;i<=m-nonleaf;i++){
		if(tree[i]>tree[2*i]||(2*i+1<=m&&tree[i]>tree[2*i+1]))
			return false;
	}
	return true;
}
void dfs(int root){
	if(root>m)
		return;
	dfs(2*root);
	dfs(2*root+1);
	printf("%d",tree[root]);
	num++;
	if(num<m) printf(" ");
}
int main(){
	scanf("%d%d",&n,&m);
	if(m%2==0)
		nonleaf = m/2;
	else
		nonleaf = m/2+1;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			scanf("%d",&tree[j]);
		}
		if(maxheap()){
			printf("Max Heap\n");
		}else if(minheap()){
			printf("Min Heap\n");
		}else{
			printf("Not Heap\n");
		}
		num = 0;
		dfs(1);
		printf("\n");
	}
	return 0;
}
