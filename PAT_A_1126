#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
using namespace std;
//1126
bool exist[502] = { false };
int n, m, a, b,cnt = 0;
int arc[502][502], v[502];
void dfs(int root) {
	cnt++;
	exist[root] = true;
	for (int i = 1; i <= n; i++) {
		if (arc[root][i] != -1 && exist[i] == false) {
			dfs(i);
		}
	}
}
int main() {
	bool flag = false, flag1 = false, flag2 = false;
	fill(arc[0], arc[0] + 502 * 502, -1);
	fill(v, v + 502, 0);
	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; i++) {
		scanf("%d%d", &a, &b);
		arc[a][b] = arc[b][a] = 1;
		v[a]++;
		v[b]++;
	}
	int qi = 0;
	for (int i = 1; i <= n; i++) {
		if (v[i] % 2 == 1)
			qi++;
	}
	if (qi == 0)
		flag = true;
	else if (qi == 2)
		flag1 = true;
	dfs(n);
	if (cnt < n)
		flag2 = true;
	for (int i = 1; i <= n; i++) {
		if (i != 1) printf(" ");
		printf("%d", v[i]);
	}
	printf("\n");
	if (flag == true&&flag2==false)
		printf("Eulerian");
	else if (flag1==true&&flag2==false) {
		printf("Semi-Eulerian");
	}else
		printf("Non-Eulerian");
}
