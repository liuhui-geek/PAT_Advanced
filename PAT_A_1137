#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
#include<map>
using namespace std;
struct student{
	string id;
	int gmid,gfin,gp,g;
};
map<string,int> amap;
int num = 1;
int transfer(string a){
	if(amap[a]==0){
		amap[a] = num;
		num++;
	}
	return amap[a];
}
bool cmp(student a,student b){
	if(a.g!=b.g)
		return a.g>b.g;
	else
		return a.id<b.id;
}
int main(){
	int p,m,n,g;
	cin>>p>>m>>n;
	string id;
	vector<student> ans(10000);
	for(int i=0;i<p;i++){
		cin>>id;
		cin>>g;
		if(g<200)
			continue;
		int num = transfer(id);
		ans[num].gp = g;
		ans[num].id = id;
		ans[num].gfin = -1;
		ans[num].gmid = -1;
	}
	for(int i=0;i<m;i++){
		cin>>id;
		cin>>g;
		if(amap[id]==0)
			continue;
		ans[amap[id]].gmid = g;
	}
	for(int i=0;i<n;i++){
		cin>>id;
		cin>>g;
		if(amap[id]==0)
			continue;
		ans[amap[id]].gfin = g;
	}
	for(int i=1;i<num;i++){
		if(ans[i].gmid>ans[i].gfin)
			ans[i].g = ans[i].gmid*0.4+ans[i].gfin*0.6+0.5;
		else
			ans[i].g = ans[i].gfin;
	}
	sort(ans.begin()+1,ans.begin()+num,cmp);
	for(int i=1;i<num;i++){
		if(ans[i].g>=60&&ans[i].g<=100)
		{
			cout<<ans[i].id<<" "<<ans[i].gp<<" "<<ans[i].gmid<<" "<<ans[i].gfin<<" "<<ans[i].g<<endl;
		}
	}
	return 0;
}
