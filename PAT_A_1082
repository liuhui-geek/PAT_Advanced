#include<iostream>
#include<math.h>
#include<sstream>
#include<string>
#include<algorithm>
using namespace std;
int main() {
	int num;
	cin >> num;
	string nums[] = { "ling","yi","er","san","si","wu","liu","qi","ba","jiu" };
	string dec[] = { "ge","Shi","Bai","Qian","Wan","Shi","Bai","Qian","Yi" };
	if (num<0) {
		cout << "Fu ";
		num = fabs(num);
	}
	string strnum = to_string(num);
	int length = strnum.length();
	bool flag = false;                                     //标志位是否前面有0
	if (length > 5) {                                    //当大于万时
		for (int i = 0; i <=length-5; i++) {                //处理大于万以上的部分
			if (i == 0) {                                 //第一个直接输出，处理空格问题
				cout << nums[strnum[i] - '0'];
				cout << " "<< dec[length - i - 1];
			}else if (strnum[i] - '0' != 0) {             //遇到不为0的输出
				if (flag) {
					cout << " ling";
					flag = false;
				}
				cout << " " << nums[strnum[i] - '0'];
				cout << " " << dec[length - i - 1] ;
			}else if (strnum[i] - '0' == 0 && i == length-5) {  //如果万位为0，则直接输出“万”
				cout << " " << dec[length - i - 1] ;
				flag = true;
			}
			else if(strnum[i] - '0' == 0){
				flag = true;
			}
		}
		for (int i = length-4; i < length; i++) {           //处理万位以下的部分
			if (i == length - 1&& strnum[i] - '0' != 0) {   //如果是个位，则直接输出数字
				if (flag) {
					cout << " ling";
					flag = false;
				}
				cout << " " << nums[strnum[i] - '0'];
			}else if (strnum[i] - '0' != 0) {               //其余部分则直接输出数
				if (flag) {
					cout << " ling";
					flag = false;
				}
				cout << " " << nums[strnum[i] - '0'];
				cout << " " << dec[length - i - 1];
			}
			else if (strnum[i] - '0' == 0) {
				flag = true;
			}
		}
	}
	else {                                                //当小于等于万时
		for (int i = 0; i < length; i++) {
			if (i == 0) {                                   //如果是万位，直接处理输出，为了处理空格
				cout << nums[strnum[i] - '0'];
				if (i != length - 1) {
					cout << " " << dec[length - i - 1];
				}
			}else if (strnum[i] - '0' != 0) {                 //如果不为0.则处理个位
				if (flag) {
					cout << " ling";
					flag = false;
				}
				if (i == length - 1) {
					cout << " " << nums[strnum[i] - '0'];
				}
				else {
					cout << " " << nums[strnum[i] - '0'];
					cout << " " << dec[length - i - 1];
				}
			}
			else if (strnum[i] - '0' == 0) {
				flag = true;
			}
		}
	}

}

//-1.224256634536E+06
