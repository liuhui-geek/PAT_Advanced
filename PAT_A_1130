#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;
struct node {
	int left, right;
	string data;
}nodes[22];
string ans;
int flag = 0, temp = 1, h = 1;
string dfs(int root) {
	if (nodes[root].left == -1 && nodes[root].right == -1)
		return nodes[root].data;
	if (nodes[root].left == -1 && nodes[root].right != -1)
		return "(" + nodes[root].data + dfs(nodes[root].right) + ")";
	if(nodes[root].left != -1 && nodes[root].right != -1)
		return "(" + dfs(nodes[root].left) + nodes[root].data + dfs(nodes[root].right) + ")";
}
int main() {
	int n, left, right;
	int father[22];
	fill(father, father + 22, -2);
	string a;
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		cin >> a >> left >> right;
		nodes[i].left = left;
		nodes[i].right = right;
		nodes[i].data = a;
		if (left != -1)
			father[left] = i;
		if (right != -1)
			father[right] = i;
	}
	while (temp != -2) {
		h = temp;
		temp = father[temp];
	}
	ans = dfs(h);
	if(ans[0] == '(') 
		ans = ans.substr(1, ans.size() - 2);
	cout << ans;
	return 0;
}
