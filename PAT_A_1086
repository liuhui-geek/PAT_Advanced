#include<iostream>
#include<vector>
#include<queue>
#include<stack>
#include<string>
using namespace std;
//1086
stack<int> ans;
vector<int> pre, in;
int n, num;
struct node {
	int data;
	node* left;
	node* right;
};
node *create(int prel, int prer, int inl, int inr) {
	if (prel > prer)
		return NULL;
	node* root = new node;
	root->data = pre[prel];
	int k;
	for (k = inl; k <= inr; k++) {
		if (in[k] == pre[prel])
			break;
	}
	int numleft = k - inl;
	root->left = create(prel + 1, prel + numleft, inl, k - 1);
	root->right = create(prel + numleft+1, prer, k + 1, inr);
	return root;
}
int index = 0;
void bfs(node* root) {
	if (root == NULL)
		return;
	if (root->left != NULL)
		bfs(root->left);
	if (root->right != NULL)
		bfs(root->right);
	printf("%d", root->data);
	index++;
	if (index < n) printf(" ");
}
int main() {
	string op;
	scanf("%d", &n);
	for (int i = 0; i < 2 * n; i++) {
		cin >> op;
		if (op == "Push"){
			cin >> num;
			ans.push(num);
			pre.push_back(num);
		}
		else {
			num = ans.top();
			in.push_back(num);
			ans.pop();
		}
	}
	node* root = create(0,n-1,0,n-1);
	bfs(root);
	return 0;
}
