#include<iostream>
#include<vector>
#include<queue>
#include<math.h>
#include<algorithm>
//1053
using namespace std;
int n, m, s, num, id, k;
vector<vector<int>> ans;
vector<int> weight,path;
bool cmp(int a,int b) {
	return weight[a] > weight[b];
}
void print(int level) {
	for (int i = 0; i < level; i++) {
		if (i == 0)
			printf("%d", path[i]);
		else
			printf(" %d", path[i]);
	}
	printf("\n");
}
void dfs(int root,int total,int level) {   //此处用结点所在高度代表所处的位置
	if (total == s) {
		if (ans[root].size() != 0)
			return;
		print(level);
	}
	for (int i = 0; i < ans[root].size(); i++) {
		path[level] = weight[ans[root][i]];
		dfs(ans[root][i],total+ weight[ans[root][i]],level+1);
	}
}
int main() {
	scanf("%d%d%d", &n, &m, &s);
	ans.resize(n);
	weight.resize(n);
	path.resize(n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &weight[i]);
	}
	for (int i = 0; i < m; i++) {
		scanf("%d%d", &id, &k);
		for (int j = 0; j < k; j++) {
			scanf("%d", &num);
			ans[id].push_back(num);
		}
	}
	for (int i = 0; i < n; i++)
		sort(ans[i].begin(),ans[i].end(),cmp);
	path[0] = weight[0];
	dfs(0,path[0],1);
	return 0;
}
